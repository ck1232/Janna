<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.CustomerAddressDbObjectMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.CustomerAddressDbObject">
    <id column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="recipient_name" jdbcType="VARCHAR" property="recipientName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="contact_number" jdbcType="BIGINT" property="contactNumber" />
    <result column="postal_code" jdbcType="INTEGER" property="postalCode" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="default_ind" jdbcType="CHAR" property="defaultInd" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="delete_ind" jdbcType="CHAR" property="deleteInd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    address_id, customer_id, recipient_name, address, contact_number, postal_code, country, 
    default_ind, version, created_by, created_on, updated_by, updated_on, delete_ind
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.CustomerAddressDbObjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_address
    where address_id = #{addressId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer_address
    where address_id = #{addressId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.CustomerAddressDbObjectExample">
    delete from customer_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.CustomerAddressDbObject">
    <selectKey keyProperty="addressId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer_address (customer_id, recipient_name, address, 
      contact_number, postal_code, country, 
      default_ind, version, created_by, 
      created_on, updated_by, updated_on, 
      delete_ind)
    values (#{customerId,jdbcType=INTEGER}, #{recipientName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{contactNumber,jdbcType=BIGINT}, #{postalCode,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, 
      #{defaultInd,jdbcType=CHAR}, #{version,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdOn,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedOn,jdbcType=TIMESTAMP}, 
      #{deleteInd,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.CustomerAddressDbObject">
    <selectKey keyProperty="addressId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="recipientName != null">
        recipient_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="contactNumber != null">
        contact_number,
      </if>
      <if test="postalCode != null">
        postal_code,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="defaultInd != null">
        default_ind,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedOn != null">
        updated_on,
      </if>
      <if test="deleteInd != null">
        delete_ind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="recipientName != null">
        #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        #{contactNumber,jdbcType=BIGINT},
      </if>
      <if test="postalCode != null">
        #{postalCode,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="defaultInd != null">
        #{defaultInd,jdbcType=CHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedOn != null">
        #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteInd != null">
        #{deleteInd,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.CustomerAddressDbObjectExample" resultType="java.lang.Integer">
    select count(*) from customer_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer_address
    <set>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.recipientName != null">
        recipient_name = #{record.recipientName,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.contactNumber != null">
        contact_number = #{record.contactNumber,jdbcType=BIGINT},
      </if>
      <if test="record.postalCode != null">
        postal_code = #{record.postalCode,jdbcType=INTEGER},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultInd != null">
        default_ind = #{record.defaultInd,jdbcType=CHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdOn != null">
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedOn != null">
        updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteInd != null">
        delete_ind = #{record.deleteInd,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer_address
    set address_id = #{record.addressId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      recipient_name = #{record.recipientName,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      contact_number = #{record.contactNumber,jdbcType=BIGINT},
      postal_code = #{record.postalCode,jdbcType=INTEGER},
      country = #{record.country,jdbcType=VARCHAR},
      default_ind = #{record.defaultInd,jdbcType=CHAR},
      version = #{record.version,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{record.deleteInd,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.CustomerAddressDbObject">
    update customer_address
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="recipientName != null">
        recipient_name = #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        contact_number = #{contactNumber,jdbcType=BIGINT},
      </if>
      <if test="postalCode != null">
        postal_code = #{postalCode,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="defaultInd != null">
        default_ind = #{defaultInd,jdbcType=CHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedOn != null">
        updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteInd != null">
        delete_ind = #{deleteInd,jdbcType=CHAR},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.CustomerAddressDbObject">
    update customer_address
    set customer_id = #{customerId,jdbcType=INTEGER},
      recipient_name = #{recipientName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      contact_number = #{contactNumber,jdbcType=BIGINT},
      postal_code = #{postalCode,jdbcType=INTEGER},
      country = #{country,jdbcType=VARCHAR},
      default_ind = #{defaultInd,jdbcType=CHAR},
      version = #{version,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{deleteInd,jdbcType=CHAR}
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
</mapper>