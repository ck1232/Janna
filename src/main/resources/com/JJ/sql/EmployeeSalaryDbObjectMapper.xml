<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.EmployeeSalaryDbObjectMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.EmployeeSalaryDbObject">
    <id column="salary_id" jdbcType="INTEGER" property="salaryId" />
    <result column="salary_date" jdbcType="DATE" property="salaryDate" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="basic_salary_amt" jdbcType="DECIMAL" property="basicSalaryAmt" />
    <result column="over_time_amt" jdbcType="DECIMAL" property="overTimeAmt" />
    <result column="over_time_hours" jdbcType="DECIMAL" property="overTimeHours" />
    <result column="over_time_remarks" jdbcType="VARCHAR" property="overTimeRemarks" />
    <result column="allowance" jdbcType="DECIMAL" property="allowance" />
    <result column="medical" jdbcType="DECIMAL" property="medical" />
    <result column="leave_balance" jdbcType="DECIMAL" property="leaveBalance" />
    <result column="leave_taken" jdbcType="DECIMAL" property="leaveTaken" />
    <result column="unpaid_leave_amt" jdbcType="DECIMAL" property="unpaidLeaveAmt" />
    <result column="unpaid_leave_remarks" jdbcType="VARCHAR" property="unpaidLeaveRemarks" />
    <result column="employee_cpf" jdbcType="DECIMAL" property="employeeCpf" />
    <result column="employer_cpf" jdbcType="DECIMAL" property="employerCpf" />
    <result column="cdac_amt" jdbcType="DECIMAL" property="cdacAmt" />
    <result column="sdl_amt" jdbcType="DECIMAL" property="sdlAmt" />
    <result column="fw_levy" jdbcType="DECIMAL" property="fwLevy" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="delete_ind" jdbcType="CHAR" property="deleteInd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    salary_id, salary_date, employee_id, basic_salary_amt, over_time_amt, over_time_hours, 
    over_time_remarks, allowance, medical, leave_balance, leave_taken, unpaid_leave_amt, 
    unpaid_leave_remarks, employee_cpf, employer_cpf, cdac_amt, sdl_amt, fw_levy, status, 
    version, created_by, created_on, updated_by, updated_on, delete_ind
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.EmployeeSalaryDbObjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee_salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.EmployeeSalaryDbObjectExample">
    delete from employee_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.EmployeeSalaryDbObject">
    <selectKey keyProperty="salaryId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee_salary (salary_date, employee_id, basic_salary_amt, 
      over_time_amt, over_time_hours, over_time_remarks, 
      allowance, medical, leave_balance, 
      leave_taken, unpaid_leave_amt, unpaid_leave_remarks, 
      employee_cpf, employer_cpf, cdac_amt, 
      sdl_amt, fw_levy, status, 
      version, created_by, created_on, 
      updated_by, updated_on, delete_ind
      )
    values (#{salaryDate,jdbcType=DATE}, #{employeeId,jdbcType=INTEGER}, #{basicSalaryAmt,jdbcType=DECIMAL}, 
      #{overTimeAmt,jdbcType=DECIMAL}, #{overTimeHours,jdbcType=DECIMAL}, #{overTimeRemarks,jdbcType=VARCHAR}, 
      #{allowance,jdbcType=DECIMAL}, #{medical,jdbcType=DECIMAL}, #{leaveBalance,jdbcType=DECIMAL}, 
      #{leaveTaken,jdbcType=DECIMAL}, #{unpaidLeaveAmt,jdbcType=DECIMAL}, #{unpaidLeaveRemarks,jdbcType=VARCHAR}, 
      #{employeeCpf,jdbcType=DECIMAL}, #{employerCpf,jdbcType=DECIMAL}, #{cdacAmt,jdbcType=DECIMAL}, 
      #{sdlAmt,jdbcType=DECIMAL}, #{fwLevy,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, #{createdOn,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedOn,jdbcType=TIMESTAMP}, #{deleteInd,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.EmployeeSalaryDbObject">
    <selectKey keyProperty="salaryId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee_salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salaryDate != null">
        salary_date,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="basicSalaryAmt != null">
        basic_salary_amt,
      </if>
      <if test="overTimeAmt != null">
        over_time_amt,
      </if>
      <if test="overTimeHours != null">
        over_time_hours,
      </if>
      <if test="overTimeRemarks != null">
        over_time_remarks,
      </if>
      <if test="allowance != null">
        allowance,
      </if>
      <if test="medical != null">
        medical,
      </if>
      <if test="leaveBalance != null">
        leave_balance,
      </if>
      <if test="leaveTaken != null">
        leave_taken,
      </if>
      <if test="unpaidLeaveAmt != null">
        unpaid_leave_amt,
      </if>
      <if test="unpaidLeaveRemarks != null">
        unpaid_leave_remarks,
      </if>
      <if test="employeeCpf != null">
        employee_cpf,
      </if>
      <if test="employerCpf != null">
        employer_cpf,
      </if>
      <if test="cdacAmt != null">
        cdac_amt,
      </if>
      <if test="sdlAmt != null">
        sdl_amt,
      </if>
      <if test="fwLevy != null">
        fw_levy,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedOn != null">
        updated_on,
      </if>
      <if test="deleteInd != null">
        delete_ind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salaryDate != null">
        #{salaryDate,jdbcType=DATE},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="basicSalaryAmt != null">
        #{basicSalaryAmt,jdbcType=DECIMAL},
      </if>
      <if test="overTimeAmt != null">
        #{overTimeAmt,jdbcType=DECIMAL},
      </if>
      <if test="overTimeHours != null">
        #{overTimeHours,jdbcType=DECIMAL},
      </if>
      <if test="overTimeRemarks != null">
        #{overTimeRemarks,jdbcType=VARCHAR},
      </if>
      <if test="allowance != null">
        #{allowance,jdbcType=DECIMAL},
      </if>
      <if test="medical != null">
        #{medical,jdbcType=DECIMAL},
      </if>
      <if test="leaveBalance != null">
        #{leaveBalance,jdbcType=DECIMAL},
      </if>
      <if test="leaveTaken != null">
        #{leaveTaken,jdbcType=DECIMAL},
      </if>
      <if test="unpaidLeaveAmt != null">
        #{unpaidLeaveAmt,jdbcType=DECIMAL},
      </if>
      <if test="unpaidLeaveRemarks != null">
        #{unpaidLeaveRemarks,jdbcType=VARCHAR},
      </if>
      <if test="employeeCpf != null">
        #{employeeCpf,jdbcType=DECIMAL},
      </if>
      <if test="employerCpf != null">
        #{employerCpf,jdbcType=DECIMAL},
      </if>
      <if test="cdacAmt != null">
        #{cdacAmt,jdbcType=DECIMAL},
      </if>
      <if test="sdlAmt != null">
        #{sdlAmt,jdbcType=DECIMAL},
      </if>
      <if test="fwLevy != null">
        #{fwLevy,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedOn != null">
        #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteInd != null">
        #{deleteInd,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.EmployeeSalaryDbObjectExample" resultType="java.lang.Integer">
    select count(*) from employee_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee_salary
    <set>
      <if test="record.salaryId != null">
        salary_id = #{record.salaryId,jdbcType=INTEGER},
      </if>
      <if test="record.salaryDate != null">
        salary_date = #{record.salaryDate,jdbcType=DATE},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.basicSalaryAmt != null">
        basic_salary_amt = #{record.basicSalaryAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.overTimeAmt != null">
        over_time_amt = #{record.overTimeAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.overTimeHours != null">
        over_time_hours = #{record.overTimeHours,jdbcType=DECIMAL},
      </if>
      <if test="record.overTimeRemarks != null">
        over_time_remarks = #{record.overTimeRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.allowance != null">
        allowance = #{record.allowance,jdbcType=DECIMAL},
      </if>
      <if test="record.medical != null">
        medical = #{record.medical,jdbcType=DECIMAL},
      </if>
      <if test="record.leaveBalance != null">
        leave_balance = #{record.leaveBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.leaveTaken != null">
        leave_taken = #{record.leaveTaken,jdbcType=DECIMAL},
      </if>
      <if test="record.unpaidLeaveAmt != null">
        unpaid_leave_amt = #{record.unpaidLeaveAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.unpaidLeaveRemarks != null">
        unpaid_leave_remarks = #{record.unpaidLeaveRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeCpf != null">
        employee_cpf = #{record.employeeCpf,jdbcType=DECIMAL},
      </if>
      <if test="record.employerCpf != null">
        employer_cpf = #{record.employerCpf,jdbcType=DECIMAL},
      </if>
      <if test="record.cdacAmt != null">
        cdac_amt = #{record.cdacAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.sdlAmt != null">
        sdl_amt = #{record.sdlAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.fwLevy != null">
        fw_levy = #{record.fwLevy,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdOn != null">
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedOn != null">
        updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteInd != null">
        delete_ind = #{record.deleteInd,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee_salary
    set salary_id = #{record.salaryId,jdbcType=INTEGER},
      salary_date = #{record.salaryDate,jdbcType=DATE},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      basic_salary_amt = #{record.basicSalaryAmt,jdbcType=DECIMAL},
      over_time_amt = #{record.overTimeAmt,jdbcType=DECIMAL},
      over_time_hours = #{record.overTimeHours,jdbcType=DECIMAL},
      over_time_remarks = #{record.overTimeRemarks,jdbcType=VARCHAR},
      allowance = #{record.allowance,jdbcType=DECIMAL},
      medical = #{record.medical,jdbcType=DECIMAL},
      leave_balance = #{record.leaveBalance,jdbcType=DECIMAL},
      leave_taken = #{record.leaveTaken,jdbcType=DECIMAL},
      unpaid_leave_amt = #{record.unpaidLeaveAmt,jdbcType=DECIMAL},
      unpaid_leave_remarks = #{record.unpaidLeaveRemarks,jdbcType=VARCHAR},
      employee_cpf = #{record.employeeCpf,jdbcType=DECIMAL},
      employer_cpf = #{record.employerCpf,jdbcType=DECIMAL},
      cdac_amt = #{record.cdacAmt,jdbcType=DECIMAL},
      sdl_amt = #{record.sdlAmt,jdbcType=DECIMAL},
      fw_levy = #{record.fwLevy,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{record.deleteInd,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.EmployeeSalaryDbObject">
    update employee_salary
    <set>
      <if test="salaryDate != null">
        salary_date = #{salaryDate,jdbcType=DATE},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="basicSalaryAmt != null">
        basic_salary_amt = #{basicSalaryAmt,jdbcType=DECIMAL},
      </if>
      <if test="overTimeAmt != null">
        over_time_amt = #{overTimeAmt,jdbcType=DECIMAL},
      </if>
      <if test="overTimeHours != null">
        over_time_hours = #{overTimeHours,jdbcType=DECIMAL},
      </if>
      <if test="overTimeRemarks != null">
        over_time_remarks = #{overTimeRemarks,jdbcType=VARCHAR},
      </if>
      <if test="allowance != null">
        allowance = #{allowance,jdbcType=DECIMAL},
      </if>
      <if test="medical != null">
        medical = #{medical,jdbcType=DECIMAL},
      </if>
      <if test="leaveBalance != null">
        leave_balance = #{leaveBalance,jdbcType=DECIMAL},
      </if>
      <if test="leaveTaken != null">
        leave_taken = #{leaveTaken,jdbcType=DECIMAL},
      </if>
      <if test="unpaidLeaveAmt != null">
        unpaid_leave_amt = #{unpaidLeaveAmt,jdbcType=DECIMAL},
      </if>
      <if test="unpaidLeaveRemarks != null">
        unpaid_leave_remarks = #{unpaidLeaveRemarks,jdbcType=VARCHAR},
      </if>
      <if test="employeeCpf != null">
        employee_cpf = #{employeeCpf,jdbcType=DECIMAL},
      </if>
      <if test="employerCpf != null">
        employer_cpf = #{employerCpf,jdbcType=DECIMAL},
      </if>
      <if test="cdacAmt != null">
        cdac_amt = #{cdacAmt,jdbcType=DECIMAL},
      </if>
      <if test="sdlAmt != null">
        sdl_amt = #{sdlAmt,jdbcType=DECIMAL},
      </if>
      <if test="fwLevy != null">
        fw_levy = #{fwLevy,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedOn != null">
        updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteInd != null">
        delete_ind = #{deleteInd,jdbcType=CHAR},
      </if>
    </set>
    where salary_id = #{salaryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.EmployeeSalaryDbObject">
    update employee_salary
    set salary_date = #{salaryDate,jdbcType=DATE},
      employee_id = #{employeeId,jdbcType=INTEGER},
      basic_salary_amt = #{basicSalaryAmt,jdbcType=DECIMAL},
      over_time_amt = #{overTimeAmt,jdbcType=DECIMAL},
      over_time_hours = #{overTimeHours,jdbcType=DECIMAL},
      over_time_remarks = #{overTimeRemarks,jdbcType=VARCHAR},
      allowance = #{allowance,jdbcType=DECIMAL},
      medical = #{medical,jdbcType=DECIMAL},
      leave_balance = #{leaveBalance,jdbcType=DECIMAL},
      leave_taken = #{leaveTaken,jdbcType=DECIMAL},
      unpaid_leave_amt = #{unpaidLeaveAmt,jdbcType=DECIMAL},
      unpaid_leave_remarks = #{unpaidLeaveRemarks,jdbcType=VARCHAR},
      employee_cpf = #{employeeCpf,jdbcType=DECIMAL},
      employer_cpf = #{employerCpf,jdbcType=DECIMAL},
      cdac_amt = #{cdacAmt,jdbcType=DECIMAL},
      sdl_amt = #{sdlAmt,jdbcType=DECIMAL},
      fw_levy = #{fwLevy,jdbcType=DECIMAL},
      status = #{status,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{deleteInd,jdbcType=CHAR}
    where salary_id = #{salaryId,jdbcType=INTEGER}
  </update>
</mapper>