package com.JJ.model;

import java.util.ArrayList;
import java.util.List;

public class SubmodulepermissiontypeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public SubmodulepermissiontypeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidIsNull() {
			addCriterion("submoduleid is null");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidIsNotNull() {
			addCriterion("submoduleid is not null");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidEqualTo(String value) {
			addCriterion("submoduleid =", value, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidNotEqualTo(String value) {
			addCriterion("submoduleid <>", value, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidGreaterThan(String value) {
			addCriterion("submoduleid >", value, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidGreaterThanOrEqualTo(String value) {
			addCriterion("submoduleid >=", value, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidLessThan(String value) {
			addCriterion("submoduleid <", value, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidLessThanOrEqualTo(String value) {
			addCriterion("submoduleid <=", value, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidLike(String value) {
			addCriterion("submoduleid like", value, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidNotLike(String value) {
			addCriterion("submoduleid not like", value, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidIn(List<String> values) {
			addCriterion("submoduleid in", values, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidNotIn(List<String> values) {
			addCriterion("submoduleid not in", values, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidBetween(String value1, String value2) {
			addCriterion("submoduleid between", value1, value2, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andSubmoduleidNotBetween(String value1, String value2) {
			addCriterion("submoduleid not between", value1, value2, "submoduleid");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeIsNull() {
			addCriterion("permissiontype is null");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeIsNotNull() {
			addCriterion("permissiontype is not null");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeEqualTo(String value) {
			addCriterion("permissiontype =", value, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeNotEqualTo(String value) {
			addCriterion("permissiontype <>", value, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeGreaterThan(String value) {
			addCriterion("permissiontype >", value, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeGreaterThanOrEqualTo(String value) {
			addCriterion("permissiontype >=", value, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeLessThan(String value) {
			addCriterion("permissiontype <", value, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeLessThanOrEqualTo(String value) {
			addCriterion("permissiontype <=", value, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeLike(String value) {
			addCriterion("permissiontype like", value, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeNotLike(String value) {
			addCriterion("permissiontype not like", value, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeIn(List<String> values) {
			addCriterion("permissiontype in", values, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeNotIn(List<String> values) {
			addCriterion("permissiontype not in", values, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeBetween(String value1, String value2) {
			addCriterion("permissiontype between", value1, value2, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andPermissiontypeNotBetween(String value1, String value2) {
			addCriterion("permissiontype not between", value1, value2, "permissiontype");
			return (Criteria) this;
		}

		public Criteria andSeqnoIsNull() {
			addCriterion("seqNo is null");
			return (Criteria) this;
		}

		public Criteria andSeqnoIsNotNull() {
			addCriterion("seqNo is not null");
			return (Criteria) this;
		}

		public Criteria andSeqnoEqualTo(String value) {
			addCriterion("seqNo =", value, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoNotEqualTo(String value) {
			addCriterion("seqNo <>", value, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoGreaterThan(String value) {
			addCriterion("seqNo >", value, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoGreaterThanOrEqualTo(String value) {
			addCriterion("seqNo >=", value, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoLessThan(String value) {
			addCriterion("seqNo <", value, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoLessThanOrEqualTo(String value) {
			addCriterion("seqNo <=", value, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoLike(String value) {
			addCriterion("seqNo like", value, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoNotLike(String value) {
			addCriterion("seqNo not like", value, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoIn(List<String> values) {
			addCriterion("seqNo in", values, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoNotIn(List<String> values) {
			addCriterion("seqNo not in", values, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoBetween(String value1, String value2) {
			addCriterion("seqNo between", value1, value2, "seqno");
			return (Criteria) this;
		}

		public Criteria andSeqnoNotBetween(String value1, String value2) {
			addCriterion("seqNo not between", value1, value2, "seqno");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table submodulepermissiontype
	 * @mbggenerated  Thu Oct 20 23:38:58 SGT 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table submodulepermissiontype
     *
     * @mbggenerated do_not_delete_during_merge Mon Oct 17 22:50:16 SGT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}