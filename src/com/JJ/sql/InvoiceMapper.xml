<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.InvoiceMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.Invoice">
    <id column="invoiceId" jdbcType="INTEGER" property="invoiceid" />
    <result column="messenger" jdbcType="VARCHAR" property="messenger" />
    <result column="invoiceDate" jdbcType="TIMESTAMP" property="invoicedate" />
    <result column="totalPrice" jdbcType="DECIMAL" property="totalprice" />
    <result column="chequeId" jdbcType="INTEGER" property="chequeid" />
    <result column="paymentMode" jdbcType="VARCHAR" property="paymentmode" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="deleteInd" jdbcType="CHAR" property="deleteind" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
    <result column="createdby" jdbcType="VARCHAR" property="createdby" />
    <result column="updatedon" jdbcType="TIMESTAMP" property="updatedon" />
    <result column="updatedby" jdbcType="VARCHAR" property="updatedby" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    invoiceId, messenger, invoiceDate, totalPrice, chequeId, paymentMode, status, deleteInd, 
    createdon, createdby, updatedon, updatedby
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invoice
    where invoiceId = #{invoiceid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from invoice
    where invoiceId = #{invoiceid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.InvoiceExample">
    delete from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.Invoice">
    insert into invoice (invoiceId, messenger, invoiceDate, 
      totalPrice, chequeId, paymentMode, 
      status, deleteInd, createdon, 
      createdby, updatedon, updatedby
      )
    values (#{invoiceid,jdbcType=INTEGER}, #{messenger,jdbcType=VARCHAR}, #{invoicedate,jdbcType=TIMESTAMP}, 
      #{totalprice,jdbcType=DECIMAL}, #{chequeid,jdbcType=INTEGER}, #{paymentmode,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{deleteind,jdbcType=CHAR}, #{createdon,jdbcType=TIMESTAMP}, 
      #{createdby,jdbcType=VARCHAR}, #{updatedon,jdbcType=TIMESTAMP}, #{updatedby,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.Invoice">
    insert into invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoiceid != null">
        invoiceId,
      </if>
      <if test="messenger != null">
        messenger,
      </if>
      <if test="invoicedate != null">
        invoiceDate,
      </if>
      <if test="totalprice != null">
        totalPrice,
      </if>
      <if test="chequeid != null">
        chequeId,
      </if>
      <if test="paymentmode != null">
        paymentMode,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deleteind != null">
        deleteInd,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
      <if test="createdby != null">
        createdby,
      </if>
      <if test="updatedon != null">
        updatedon,
      </if>
      <if test="updatedby != null">
        updatedby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoiceid != null">
        #{invoiceid,jdbcType=INTEGER},
      </if>
      <if test="messenger != null">
        #{messenger,jdbcType=VARCHAR},
      </if>
      <if test="invoicedate != null">
        #{invoicedate,jdbcType=TIMESTAMP},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="chequeid != null">
        #{chequeid,jdbcType=INTEGER},
      </if>
      <if test="paymentmode != null">
        #{paymentmode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleteind != null">
        #{deleteind,jdbcType=CHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null">
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        #{updatedby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.InvoiceExample" resultType="java.lang.Integer">
    select count(*) from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invoice
    <set>
      <if test="record.invoiceid != null">
        invoiceId = #{record.invoiceid,jdbcType=INTEGER},
      </if>
      <if test="record.messenger != null">
        messenger = #{record.messenger,jdbcType=VARCHAR},
      </if>
      <if test="record.invoicedate != null">
        invoiceDate = #{record.invoicedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalprice != null">
        totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      </if>
      <if test="record.chequeid != null">
        chequeId = #{record.chequeid,jdbcType=INTEGER},
      </if>
      <if test="record.paymentmode != null">
        paymentMode = #{record.paymentmode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteind != null">
        deleteInd = #{record.deleteind,jdbcType=CHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdby != null">
        createdby = #{record.createdby,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedon != null">
        updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedby != null">
        updatedby = #{record.updatedby,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invoice
    set invoiceId = #{record.invoiceid,jdbcType=INTEGER},
      messenger = #{record.messenger,jdbcType=VARCHAR},
      invoiceDate = #{record.invoicedate,jdbcType=TIMESTAMP},
      totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      chequeId = #{record.chequeid,jdbcType=INTEGER},
      paymentMode = #{record.paymentmode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      deleteInd = #{record.deleteind,jdbcType=CHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP},
      createdby = #{record.createdby,jdbcType=VARCHAR},
      updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      updatedby = #{record.updatedby,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.Invoice">
    update invoice
    <set>
      <if test="messenger != null">
        messenger = #{messenger,jdbcType=VARCHAR},
      </if>
      <if test="invoicedate != null">
        invoiceDate = #{invoicedate,jdbcType=TIMESTAMP},
      </if>
      <if test="totalprice != null">
        totalPrice = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="chequeid != null">
        chequeId = #{chequeid,jdbcType=INTEGER},
      </if>
      <if test="paymentmode != null">
        paymentMode = #{paymentmode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleteind != null">
        deleteInd = #{deleteind,jdbcType=CHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null">
        createdby = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        updatedon = #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        updatedby = #{updatedby,jdbcType=VARCHAR},
      </if>
    </set>
    where invoiceId = #{invoiceid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.Invoice">
    update invoice
    set messenger = #{messenger,jdbcType=VARCHAR},
      invoiceDate = #{invoicedate,jdbcType=TIMESTAMP},
      totalPrice = #{totalprice,jdbcType=DECIMAL},
      chequeId = #{chequeid,jdbcType=INTEGER},
      paymentMode = #{paymentmode,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      deleteInd = #{deleteind,jdbcType=CHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP},
      createdby = #{createdby,jdbcType=VARCHAR},
      updatedon = #{updatedon,jdbcType=TIMESTAMP},
      updatedby = #{updatedby,jdbcType=VARCHAR}
    where invoiceId = #{invoiceid,jdbcType=INTEGER}
  </update>
</mapper>