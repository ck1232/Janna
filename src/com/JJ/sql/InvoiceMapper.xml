<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.InvoiceMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.Invoice">
    <id column="invoiceId" jdbcType="INTEGER" property="invoiceid" />
    <result column="messenger" jdbcType="VARCHAR" property="messenger" />
    <result column="invoiceDate" jdbcType="TIMESTAMP" property="invoicedate" />
    <result column="totalPrice" jdbcType="DECIMAL" property="totalprice" />
    <result column="dteCreated" jdbcType="TIMESTAMP" property="dtecreated" />
    <result column="dteUpdated" jdbcType="TIMESTAMP" property="dteupdated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    invoiceId, messenger, invoiceDate, totalPrice, dteCreated, dteUpdated
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invoice
    where invoiceId = #{invoiceid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from invoice
    where invoiceId = #{invoiceid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.InvoiceExample">
    delete from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.Invoice">
    insert into invoice (invoiceId, messenger, invoiceDate, 
      totalPrice, dteCreated, dteUpdated
      )
    values (#{invoiceid,jdbcType=INTEGER}, #{messenger,jdbcType=VARCHAR}, #{invoicedate,jdbcType=TIMESTAMP}, 
      #{totalprice,jdbcType=DECIMAL}, #{dtecreated,jdbcType=TIMESTAMP}, #{dteupdated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.Invoice">
    insert into invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoiceid != null">
        invoiceId,
      </if>
      <if test="messenger != null">
        messenger,
      </if>
      <if test="invoicedate != null">
        invoiceDate,
      </if>
      <if test="totalprice != null">
        totalPrice,
      </if>
      <if test="dtecreated != null">
        dteCreated,
      </if>
      <if test="dteupdated != null">
        dteUpdated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoiceid != null">
        #{invoiceid,jdbcType=INTEGER},
      </if>
      <if test="messenger != null">
        #{messenger,jdbcType=VARCHAR},
      </if>
      <if test="invoicedate != null">
        #{invoicedate,jdbcType=TIMESTAMP},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="dtecreated != null">
        #{dtecreated,jdbcType=TIMESTAMP},
      </if>
      <if test="dteupdated != null">
        #{dteupdated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.InvoiceExample" resultType="java.lang.Integer">
    select count(*) from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invoice
    <set>
      <if test="record.invoiceid != null">
        invoiceId = #{record.invoiceid,jdbcType=INTEGER},
      </if>
      <if test="record.messenger != null">
        messenger = #{record.messenger,jdbcType=VARCHAR},
      </if>
      <if test="record.invoicedate != null">
        invoiceDate = #{record.invoicedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalprice != null">
        totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      </if>
      <if test="record.dtecreated != null">
        dteCreated = #{record.dtecreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dteupdated != null">
        dteUpdated = #{record.dteupdated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invoice
    set invoiceId = #{record.invoiceid,jdbcType=INTEGER},
      messenger = #{record.messenger,jdbcType=VARCHAR},
      invoiceDate = #{record.invoicedate,jdbcType=TIMESTAMP},
      totalPrice = #{record.totalprice,jdbcType=DECIMAL},
      dteCreated = #{record.dtecreated,jdbcType=TIMESTAMP},
      dteUpdated = #{record.dteupdated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.Invoice">
    update invoice
    <set>
      <if test="messenger != null">
        messenger = #{messenger,jdbcType=VARCHAR},
      </if>
      <if test="invoicedate != null">
        invoiceDate = #{invoicedate,jdbcType=TIMESTAMP},
      </if>
      <if test="totalprice != null">
        totalPrice = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="dtecreated != null">
        dteCreated = #{dtecreated,jdbcType=TIMESTAMP},
      </if>
      <if test="dteupdated != null">
        dteUpdated = #{dteupdated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where invoiceId = #{invoiceid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.Invoice">
    update invoice
    set messenger = #{messenger,jdbcType=VARCHAR},
      invoiceDate = #{invoicedate,jdbcType=TIMESTAMP},
      totalPrice = #{totalprice,jdbcType=DECIMAL},
      dteCreated = #{dtecreated,jdbcType=TIMESTAMP},
      dteUpdated = #{dteupdated,jdbcType=TIMESTAMP}
    where invoiceId = #{invoiceid,jdbcType=INTEGER}
  </update>
</mapper>