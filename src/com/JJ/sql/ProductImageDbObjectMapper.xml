<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.ProductImageDbObjectMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.ProductImageDbObject">
    <id column="product_image_id" jdbcType="INTEGER" property="productImageId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="image_name" jdbcType="VARCHAR" property="imageName" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="display_ind" jdbcType="CHAR" property="displayInd" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="delete_ind" jdbcType="CHAR" property="deleteInd" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.JJ.model.ProductImageDbObjectWithBLOBs">
    <result column="image" jdbcType="LONGVARBINARY" property="image" />
    <result column="thumb_nail_image" jdbcType="LONGVARBINARY" property="thumbNailImage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_image_id, product_id, image_name, sequence, file_type, display_ind, version, 
    created_by, created_on, updated_by, updated_on, delete_ind
  </sql>
  <sql id="Blob_Column_List">
    image, thumb_nail_image
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.JJ.model.ProductImageDbObjectExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.JJ.model.ProductImageDbObjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_image
    where product_image_id = #{productImageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_image
    where product_image_id = #{productImageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.ProductImageDbObjectExample">
    delete from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.ProductImageDbObjectWithBLOBs">
    <selectKey keyProperty="productImageId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_image (product_id, image_name, sequence, 
      file_type, display_ind, version, 
      created_by, created_on, updated_by, 
      updated_on, delete_ind, image, 
      thumb_nail_image)
    values (#{productId,jdbcType=INTEGER}, #{imageName,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, 
      #{fileType,jdbcType=VARCHAR}, #{displayInd,jdbcType=CHAR}, #{version,jdbcType=INTEGER}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdOn,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedOn,jdbcType=TIMESTAMP}, #{deleteInd,jdbcType=CHAR}, #{image,jdbcType=LONGVARBINARY}, 
      #{thumbNailImage,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.ProductImageDbObjectWithBLOBs">
    <selectKey keyProperty="productImageId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_image
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="imageName != null">
        image_name,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="displayInd != null">
        display_ind,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedOn != null">
        updated_on,
      </if>
      <if test="deleteInd != null">
        delete_ind,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="thumbNailImage != null">
        thumb_nail_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="imageName != null">
        #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="displayInd != null">
        #{displayInd,jdbcType=CHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedOn != null">
        #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteInd != null">
        #{deleteInd,jdbcType=CHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=LONGVARBINARY},
      </if>
      <if test="thumbNailImage != null">
        #{thumbNailImage,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.ProductImageDbObjectExample" resultType="java.lang.Integer">
    select count(*) from product_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_image
    <set>
      <if test="record.productImageId != null">
        product_image_id = #{record.productImageId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.imageName != null">
        image_name = #{record.imageName,jdbcType=VARCHAR},
      </if>
      <if test="record.sequence != null">
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.displayInd != null">
        display_ind = #{record.displayInd,jdbcType=CHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdOn != null">
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedOn != null">
        updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteInd != null">
        delete_ind = #{record.deleteInd,jdbcType=CHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.thumbNailImage != null">
        thumb_nail_image = #{record.thumbNailImage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product_image
    set product_image_id = #{record.productImageId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      image_name = #{record.imageName,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=INTEGER},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      display_ind = #{record.displayInd,jdbcType=CHAR},
      version = #{record.version,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{record.deleteInd,jdbcType=CHAR},
      image = #{record.image,jdbcType=LONGVARBINARY},
      thumb_nail_image = #{record.thumbNailImage,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_image
    set product_image_id = #{record.productImageId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      image_name = #{record.imageName,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=INTEGER},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      display_ind = #{record.displayInd,jdbcType=CHAR},
      version = #{record.version,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{record.deleteInd,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.ProductImageDbObjectWithBLOBs">
    update product_image
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="imageName != null">
        image_name = #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null">
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="displayInd != null">
        display_ind = #{displayInd,jdbcType=CHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedOn != null">
        updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteInd != null">
        delete_ind = #{deleteInd,jdbcType=CHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=LONGVARBINARY},
      </if>
      <if test="thumbNailImage != null">
        thumb_nail_image = #{thumbNailImage,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where product_image_id = #{productImageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.JJ.model.ProductImageDbObjectWithBLOBs">
    update product_image
    set product_id = #{productId,jdbcType=INTEGER},
      image_name = #{imageName,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      file_type = #{fileType,jdbcType=VARCHAR},
      display_ind = #{displayInd,jdbcType=CHAR},
      version = #{version,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{deleteInd,jdbcType=CHAR},
      image = #{image,jdbcType=LONGVARBINARY},
      thumb_nail_image = #{thumbNailImage,jdbcType=LONGVARBINARY}
    where product_image_id = #{productImageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.ProductImageDbObject">
    update product_image
    set product_id = #{productId,jdbcType=INTEGER},
      image_name = #{imageName,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      file_type = #{fileType,jdbcType=VARCHAR},
      display_ind = #{displayInd,jdbcType=CHAR},
      version = #{version,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{deleteInd,jdbcType=CHAR}
    where product_image_id = #{productImageId,jdbcType=INTEGER}
  </update>
</mapper>