<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.Product">
    <id column="productId" jdbcType="INTEGER" property="productid" />
    <result column="productName" jdbcType="VARCHAR" property="productname" />
    <result column="unitPrice" jdbcType="DECIMAL" property="unitprice" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="subcategoryId" jdbcType="INTEGER" property="subcategoryid" />
    <result column="productCode" jdbcType="VARCHAR" property="productcode" />
    <result column="desciption" jdbcType="VARCHAR" property="desciption" />
    <result column="paypalId" jdbcType="VARCHAR" property="paypalid" />
    <result column="deleteInd" jdbcType="CHAR" property="deleteind" />
    <result column="createdby" jdbcType="VARCHAR" property="createdby" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
    <result column="updatedby" jdbcType="VARCHAR" property="updatedby" />
    <result column="updatedon" jdbcType="TIMESTAMP" property="updatedon" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    productId, productName, unitPrice, weight, subcategoryId, productCode, desciption, 
    paypalId, deleteInd, createdby, createdon, updatedby, updatedon, version
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where productId = #{productid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where productId = #{productid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.Product" useGeneratedKeys="true" keyColumn="productId" keyProperty="productid">
    insert into product (productId, productName, unitPrice, 
      weight, subcategoryId, productCode, 
      desciption, paypalId, deleteInd, 
      createdby, createdon, updatedby, 
      updatedon, version)
    values (#{productid,jdbcType=INTEGER}, #{productname,jdbcType=VARCHAR}, #{unitprice,jdbcType=DECIMAL}, 
      #{weight,jdbcType=INTEGER}, #{subcategoryid,jdbcType=INTEGER}, #{productcode,jdbcType=VARCHAR}, 
      #{desciption,jdbcType=VARCHAR}, #{paypalid,jdbcType=VARCHAR}, #{deleteind,jdbcType=CHAR}, 
      #{createdby,jdbcType=VARCHAR}, #{createdon,jdbcType=TIMESTAMP}, #{updatedby,jdbcType=VARCHAR}, 
      #{updatedon,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.Product" useGeneratedKeys="true" keyColumn="productId" keyProperty="productid">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productid != null">
        productId,
      </if>
      <if test="productname != null">
        productName,
      </if>
      <if test="unitprice != null">
        unitPrice,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="subcategoryid != null">
        subcategoryId,
      </if>
      <if test="productcode != null">
        productCode,
      </if>
      <if test="desciption != null">
        desciption,
      </if>
      <if test="paypalid != null">
        paypalId,
      </if>
      <if test="deleteind != null">
        deleteInd,
      </if>
      <if test="createdby != null">
        createdby,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
      <if test="updatedby != null">
        updatedby,
      </if>
      <if test="updatedon != null">
        updatedon,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="productname != null">
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="unitprice != null">
        #{unitprice,jdbcType=DECIMAL},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="subcategoryid != null">
        #{subcategoryid,jdbcType=INTEGER},
      </if>
      <if test="productcode != null">
        #{productcode,jdbcType=VARCHAR},
      </if>
      <if test="desciption != null">
        #{desciption,jdbcType=VARCHAR},
      </if>
      <if test="paypalid != null">
        #{paypalid,jdbcType=VARCHAR},
      </if>
      <if test="deleteind != null">
        #{deleteind,jdbcType=CHAR},
      </if>
      <if test="createdby != null">
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        #{updatedby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.ProductExample" resultType="java.lang.Integer">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.productid != null">
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.productname != null">
        productName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.unitprice != null">
        unitPrice = #{record.unitprice,jdbcType=DECIMAL},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.subcategoryid != null">
        subcategoryId = #{record.subcategoryid,jdbcType=INTEGER},
      </if>
      <if test="record.productcode != null">
        productCode = #{record.productcode,jdbcType=VARCHAR},
      </if>
      <if test="record.desciption != null">
        desciption = #{record.desciption,jdbcType=VARCHAR},
      </if>
      <if test="record.paypalid != null">
        paypalId = #{record.paypalid,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteind != null">
        deleteInd = #{record.deleteind,jdbcType=CHAR},
      </if>
      <if test="record.createdby != null">
        createdby = #{record.createdby,jdbcType=VARCHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedby != null">
        updatedby = #{record.updatedby,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedon != null">
        updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set productId = #{record.productid,jdbcType=INTEGER},
      productName = #{record.productname,jdbcType=VARCHAR},
      unitPrice = #{record.unitprice,jdbcType=DECIMAL},
      weight = #{record.weight,jdbcType=INTEGER},
      subcategoryId = #{record.subcategoryid,jdbcType=INTEGER},
      productCode = #{record.productcode,jdbcType=VARCHAR},
      desciption = #{record.desciption,jdbcType=VARCHAR},
      paypalId = #{record.paypalid,jdbcType=VARCHAR},
      deleteInd = #{record.deleteind,jdbcType=CHAR},
      createdby = #{record.createdby,jdbcType=VARCHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP},
      updatedby = #{record.updatedby,jdbcType=VARCHAR},
      updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.Product">
    update product
    <set>
      <if test="productname != null">
        productName = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="unitprice != null">
        unitPrice = #{unitprice,jdbcType=DECIMAL},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="subcategoryid != null">
        subcategoryId = #{subcategoryid,jdbcType=INTEGER},
      </if>
      <if test="productcode != null">
        productCode = #{productcode,jdbcType=VARCHAR},
      </if>
      <if test="desciption != null">
        desciption = #{desciption,jdbcType=VARCHAR},
      </if>
      <if test="paypalid != null">
        paypalId = #{paypalid,jdbcType=VARCHAR},
      </if>
      <if test="deleteind != null">
        deleteInd = #{deleteind,jdbcType=CHAR},
      </if>
      <if test="createdby != null">
        createdby = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        updatedby = #{updatedby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        updatedon = #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where productId = #{productid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.Product">
    update product
    set productName = #{productname,jdbcType=VARCHAR},
      unitPrice = #{unitprice,jdbcType=DECIMAL},
      weight = #{weight,jdbcType=INTEGER},
      subcategoryId = #{subcategoryid,jdbcType=INTEGER},
      productCode = #{productcode,jdbcType=VARCHAR},
      desciption = #{desciption,jdbcType=VARCHAR},
      paypalId = #{paypalid,jdbcType=VARCHAR},
      deleteInd = #{deleteind,jdbcType=CHAR},
      createdby = #{createdby,jdbcType=VARCHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP},
      updatedby = #{updatedby,jdbcType=VARCHAR},
      updatedon = #{updatedon,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where productId = #{productid,jdbcType=INTEGER}
  </update>
</mapper>