<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.Employee">
    <id column="employeeId" jdbcType="INTEGER" property="employeeid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="employmentType" jdbcType="VARCHAR" property="employmenttype" />
    <result column="dob" jdbcType="DATE" property="dob" />
    <result column="nationality" jdbcType="VARCHAR" property="nationality" />
    <result column="basicSalary" jdbcType="DECIMAL" property="basicsalary" />
    <result column="defunctInd" jdbcType="CHAR" property="defunctind" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    employeeId, name, employmentType, dob, nationality, basicSalary, defunctInd
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.Employee">
    insert into employee (employeeId, name, employmentType, 
      dob, nationality, basicSalary, 
      defunctInd)
    values (#{employeeid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{employmenttype,jdbcType=VARCHAR}, 
      #{dob,jdbcType=DATE}, #{nationality,jdbcType=VARCHAR}, #{basicsalary,jdbcType=DECIMAL}, 
      #{defunctind,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeid != null">
        employeeId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="employmenttype != null">
        employmentType,
      </if>
      <if test="dob != null">
        dob,
      </if>
      <if test="nationality != null">
        nationality,
      </if>
      <if test="basicsalary != null">
        basicSalary,
      </if>
      <if test="defunctind != null">
        defunctInd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeid != null">
        #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="employmenttype != null">
        #{employmenttype,jdbcType=VARCHAR},
      </if>
      <if test="dob != null">
        #{dob,jdbcType=DATE},
      </if>
      <if test="nationality != null">
        #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="basicsalary != null">
        #{basicsalary,jdbcType=DECIMAL},
      </if>
      <if test="defunctind != null">
        #{defunctind,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.EmployeeExample" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.employeeid != null">
        employeeId = #{record.employeeid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.employmenttype != null">
        employmentType = #{record.employmenttype,jdbcType=VARCHAR},
      </if>
      <if test="record.dob != null">
        dob = #{record.dob,jdbcType=DATE},
      </if>
      <if test="record.nationality != null">
        nationality = #{record.nationality,jdbcType=VARCHAR},
      </if>
      <if test="record.basicsalary != null">
        basicSalary = #{record.basicsalary,jdbcType=DECIMAL},
      </if>
      <if test="record.defunctind != null">
        defunctInd = #{record.defunctind,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set employeeId = #{record.employeeid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      employmentType = #{record.employmenttype,jdbcType=VARCHAR},
      dob = #{record.dob,jdbcType=DATE},
      nationality = #{record.nationality,jdbcType=VARCHAR},
      basicSalary = #{record.basicsalary,jdbcType=DECIMAL},
      defunctInd = #{record.defunctind,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.Employee">
    update employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="employmenttype != null">
        employmentType = #{employmenttype,jdbcType=VARCHAR},
      </if>
      <if test="dob != null">
        dob = #{dob,jdbcType=DATE},
      </if>
      <if test="nationality != null">
        nationality = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="basicsalary != null">
        basicSalary = #{basicsalary,jdbcType=DECIMAL},
      </if>
      <if test="defunctind != null">
        defunctInd = #{defunctind,jdbcType=CHAR},
      </if>
    </set>
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      employmentType = #{employmenttype,jdbcType=VARCHAR},
      dob = #{dob,jdbcType=DATE},
      nationality = #{nationality,jdbcType=VARCHAR},
      basicSalary = #{basicsalary,jdbcType=DECIMAL},
      defunctInd = #{defunctind,jdbcType=CHAR}
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </update>
</mapper>