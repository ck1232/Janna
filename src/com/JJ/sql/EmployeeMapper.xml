<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.Employee">
    <id column="employeeId" jdbcType="INTEGER" property="employeeid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="employmentType" jdbcType="VARCHAR" property="employmenttype" />
    <result column="dob" jdbcType="DATE" property="dob" />
    <result column="nationality" jdbcType="VARCHAR" property="nationality" />
    <result column="basicSalary" jdbcType="DECIMAL" property="basicsalary" />
    <result column="employStartDate" jdbcType="DATE" property="employstartdate" />
    <result column="employEndDate" jdbcType="DATE" property="employenddate" />
    <result column="deleteInd" jdbcType="CHAR" property="deleteind" />
    <result column="cdacInd" jdbcType="CHAR" property="cdacind" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
    <result column="createdby" jdbcType="VARCHAR" property="createdby" />
    <result column="updatedon" jdbcType="TIMESTAMP" property="updatedon" />
    <result column="updatedby" jdbcType="VARCHAR" property="updatedby" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    employeeId, name, employmentType, dob, nationality, basicSalary, employStartDate, 
    employEndDate, deleteInd, cdacInd, createdon, createdby, updatedon, updatedby
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.Employee">
    insert into employee (employeeId, name, employmentType, 
      dob, nationality, basicSalary, 
      employStartDate, employEndDate, deleteInd, 
      cdacInd, createdon, createdby, 
      updatedon, updatedby)
    values (#{employeeid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{employmenttype,jdbcType=VARCHAR}, 
      #{dob,jdbcType=DATE}, #{nationality,jdbcType=VARCHAR}, #{basicsalary,jdbcType=DECIMAL}, 
      #{employstartdate,jdbcType=DATE}, #{employenddate,jdbcType=DATE}, #{deleteind,jdbcType=CHAR}, 
      #{cdacind,jdbcType=CHAR}, #{createdon,jdbcType=TIMESTAMP}, #{createdby,jdbcType=VARCHAR}, 
      #{updatedon,jdbcType=TIMESTAMP}, #{updatedby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeid != null">
        employeeId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="employmenttype != null">
        employmentType,
      </if>
      <if test="dob != null">
        dob,
      </if>
      <if test="nationality != null">
        nationality,
      </if>
      <if test="basicsalary != null">
        basicSalary,
      </if>
      <if test="employstartdate != null">
        employStartDate,
      </if>
      <if test="employenddate != null">
        employEndDate,
      </if>
      <if test="deleteind != null">
        deleteInd,
      </if>
      <if test="cdacind != null">
        cdacInd,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
      <if test="createdby != null">
        createdby,
      </if>
      <if test="updatedon != null">
        updatedon,
      </if>
      <if test="updatedby != null">
        updatedby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeid != null">
        #{employeeid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="employmenttype != null">
        #{employmenttype,jdbcType=VARCHAR},
      </if>
      <if test="dob != null">
        #{dob,jdbcType=DATE},
      </if>
      <if test="nationality != null">
        #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="basicsalary != null">
        #{basicsalary,jdbcType=DECIMAL},
      </if>
      <if test="employstartdate != null">
        #{employstartdate,jdbcType=DATE},
      </if>
      <if test="employenddate != null">
        #{employenddate,jdbcType=DATE},
      </if>
      <if test="deleteind != null">
        #{deleteind,jdbcType=CHAR},
      </if>
      <if test="cdacind != null">
        #{cdacind,jdbcType=CHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null">
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        #{updatedby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.EmployeeExample" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.employeeid != null">
        employeeId = #{record.employeeid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.employmenttype != null">
        employmentType = #{record.employmenttype,jdbcType=VARCHAR},
      </if>
      <if test="record.dob != null">
        dob = #{record.dob,jdbcType=DATE},
      </if>
      <if test="record.nationality != null">
        nationality = #{record.nationality,jdbcType=VARCHAR},
      </if>
      <if test="record.basicsalary != null">
        basicSalary = #{record.basicsalary,jdbcType=DECIMAL},
      </if>
      <if test="record.employstartdate != null">
        employStartDate = #{record.employstartdate,jdbcType=DATE},
      </if>
      <if test="record.employenddate != null">
        employEndDate = #{record.employenddate,jdbcType=DATE},
      </if>
      <if test="record.deleteind != null">
        deleteInd = #{record.deleteind,jdbcType=CHAR},
      </if>
      <if test="record.cdacind != null">
        cdacInd = #{record.cdacind,jdbcType=CHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdby != null">
        createdby = #{record.createdby,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedon != null">
        updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedby != null">
        updatedby = #{record.updatedby,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set employeeId = #{record.employeeid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      employmentType = #{record.employmenttype,jdbcType=VARCHAR},
      dob = #{record.dob,jdbcType=DATE},
      nationality = #{record.nationality,jdbcType=VARCHAR},
      basicSalary = #{record.basicsalary,jdbcType=DECIMAL},
      employStartDate = #{record.employstartdate,jdbcType=DATE},
      employEndDate = #{record.employenddate,jdbcType=DATE},
      deleteInd = #{record.deleteind,jdbcType=CHAR},
      cdacInd = #{record.cdacind,jdbcType=CHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP},
      createdby = #{record.createdby,jdbcType=VARCHAR},
      updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      updatedby = #{record.updatedby,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.Employee">
    update employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="employmenttype != null">
        employmentType = #{employmenttype,jdbcType=VARCHAR},
      </if>
      <if test="dob != null">
        dob = #{dob,jdbcType=DATE},
      </if>
      <if test="nationality != null">
        nationality = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="basicsalary != null">
        basicSalary = #{basicsalary,jdbcType=DECIMAL},
      </if>
      <if test="employstartdate != null">
        employStartDate = #{employstartdate,jdbcType=DATE},
      </if>
      <if test="employenddate != null">
        employEndDate = #{employenddate,jdbcType=DATE},
      </if>
      <if test="deleteind != null">
        deleteInd = #{deleteind,jdbcType=CHAR},
      </if>
      <if test="cdacind != null">
        cdacInd = #{cdacind,jdbcType=CHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null">
        createdby = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        updatedon = #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        updatedby = #{updatedby,jdbcType=VARCHAR},
      </if>
    </set>
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      employmentType = #{employmenttype,jdbcType=VARCHAR},
      dob = #{dob,jdbcType=DATE},
      nationality = #{nationality,jdbcType=VARCHAR},
      basicSalary = #{basicsalary,jdbcType=DECIMAL},
      employStartDate = #{employstartdate,jdbcType=DATE},
      employEndDate = #{employenddate,jdbcType=DATE},
      deleteInd = #{deleteind,jdbcType=CHAR},
      cdacInd = #{cdacind,jdbcType=CHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP},
      createdby = #{createdby,jdbcType=VARCHAR},
      updatedon = #{updatedon,jdbcType=TIMESTAMP},
      updatedby = #{updatedby,jdbcType=VARCHAR}
    where employeeId = #{employeeid,jdbcType=INTEGER}
  </update>
</mapper>