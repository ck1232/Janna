<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.TransactionPayerAddressDbObjectMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.TransactionPayerAddressDbObject">
    <id column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="street1" jdbcType="VARCHAR" property="street1" />
    <result column="street2" jdbcType="VARCHAR" property="street2" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="state_or_province" jdbcType="VARCHAR" property="stateOrProvince" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="country_name" jdbcType="VARCHAR" property="countryName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="postal_code" jdbcType="VARCHAR" property="postalCode" />
    <result column="address_id" jdbcType="VARCHAR" property="addressId" />
    <result column="address_owner" jdbcType="VARCHAR" property="addressOwner" />
    <result column="external_address_id" jdbcType="VARCHAR" property="externalAddressId" />
    <result column="address_status" jdbcType="VARCHAR" property="addressStatus" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="delete_ind" jdbcType="CHAR" property="deleteInd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    transaction_id, type, name, street1, street2, city_name, state_or_province, country, 
    country_name, phone, postal_code, address_id, address_owner, external_address_id, 
    address_status, version, created_by, created_on, updated_by, updated_on, delete_ind
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.TransactionPayerAddressDbObjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction_payer_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction_payer_address
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from transaction_payer_address
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.TransactionPayerAddressDbObjectExample">
    delete from transaction_payer_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.TransactionPayerAddressDbObject">
    insert into transaction_payer_address (transaction_id, type, name, 
      street1, street2, city_name, 
      state_or_province, country, country_name, 
      phone, postal_code, address_id, 
      address_owner, external_address_id, address_status, 
      version, created_by, created_on, 
      updated_by, updated_on, delete_ind
      )
    values (#{transactionId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{street1,jdbcType=VARCHAR}, #{street2,jdbcType=VARCHAR}, #{cityName,jdbcType=VARCHAR}, 
      #{stateOrProvince,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, #{countryName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{postalCode,jdbcType=VARCHAR}, #{addressId,jdbcType=VARCHAR}, 
      #{addressOwner,jdbcType=VARCHAR}, #{externalAddressId,jdbcType=VARCHAR}, #{addressStatus,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, #{createdOn,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedOn,jdbcType=TIMESTAMP}, #{deleteInd,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.TransactionPayerAddressDbObject">
    insert into transaction_payer_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="street1 != null">
        street1,
      </if>
      <if test="street2 != null">
        street2,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="stateOrProvince != null">
        state_or_province,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="countryName != null">
        country_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="postalCode != null">
        postal_code,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="addressOwner != null">
        address_owner,
      </if>
      <if test="externalAddressId != null">
        external_address_id,
      </if>
      <if test="addressStatus != null">
        address_status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedOn != null">
        updated_on,
      </if>
      <if test="deleteInd != null">
        delete_ind,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="street1 != null">
        #{street1,jdbcType=VARCHAR},
      </if>
      <if test="street2 != null">
        #{street2,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="stateOrProvince != null">
        #{stateOrProvince,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="countryName != null">
        #{countryName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null">
        #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="addressOwner != null">
        #{addressOwner,jdbcType=VARCHAR},
      </if>
      <if test="externalAddressId != null">
        #{externalAddressId,jdbcType=VARCHAR},
      </if>
      <if test="addressStatus != null">
        #{addressStatus,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedOn != null">
        #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteInd != null">
        #{deleteInd,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.TransactionPayerAddressDbObjectExample" resultType="java.lang.Integer">
    select count(*) from transaction_payer_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transaction_payer_address
    <set>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.street1 != null">
        street1 = #{record.street1,jdbcType=VARCHAR},
      </if>
      <if test="record.street2 != null">
        street2 = #{record.street2,jdbcType=VARCHAR},
      </if>
      <if test="record.cityName != null">
        city_name = #{record.cityName,jdbcType=VARCHAR},
      </if>
      <if test="record.stateOrProvince != null">
        state_or_province = #{record.stateOrProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.countryName != null">
        country_name = #{record.countryName,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.postalCode != null">
        postal_code = #{record.postalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=VARCHAR},
      </if>
      <if test="record.addressOwner != null">
        address_owner = #{record.addressOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.externalAddressId != null">
        external_address_id = #{record.externalAddressId,jdbcType=VARCHAR},
      </if>
      <if test="record.addressStatus != null">
        address_status = #{record.addressStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdOn != null">
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedOn != null">
        updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteInd != null">
        delete_ind = #{record.deleteInd,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transaction_payer_address
    set transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      street1 = #{record.street1,jdbcType=VARCHAR},
      street2 = #{record.street2,jdbcType=VARCHAR},
      city_name = #{record.cityName,jdbcType=VARCHAR},
      state_or_province = #{record.stateOrProvince,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      country_name = #{record.countryName,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      postal_code = #{record.postalCode,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=VARCHAR},
      address_owner = #{record.addressOwner,jdbcType=VARCHAR},
      external_address_id = #{record.externalAddressId,jdbcType=VARCHAR},
      address_status = #{record.addressStatus,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_on = #{record.updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{record.deleteInd,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.TransactionPayerAddressDbObject">
    update transaction_payer_address
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="street1 != null">
        street1 = #{street1,jdbcType=VARCHAR},
      </if>
      <if test="street2 != null">
        street2 = #{street2,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="stateOrProvince != null">
        state_or_province = #{stateOrProvince,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="countryName != null">
        country_name = #{countryName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null">
        postal_code = #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="addressOwner != null">
        address_owner = #{addressOwner,jdbcType=VARCHAR},
      </if>
      <if test="externalAddressId != null">
        external_address_id = #{externalAddressId,jdbcType=VARCHAR},
      </if>
      <if test="addressStatus != null">
        address_status = #{addressStatus,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedOn != null">
        updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteInd != null">
        delete_ind = #{deleteInd,jdbcType=CHAR},
      </if>
    </set>
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.TransactionPayerAddressDbObject">
    update transaction_payer_address
    set type = #{type,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      street1 = #{street1,jdbcType=VARCHAR},
      street2 = #{street2,jdbcType=VARCHAR},
      city_name = #{cityName,jdbcType=VARCHAR},
      state_or_province = #{stateOrProvince,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      country_name = #{countryName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      postal_code = #{postalCode,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=VARCHAR},
      address_owner = #{addressOwner,jdbcType=VARCHAR},
      external_address_id = #{externalAddressId,jdbcType=VARCHAR},
      address_status = #{addressStatus,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      delete_ind = #{deleteInd,jdbcType=CHAR}
    where transaction_id = #{transactionId,jdbcType=VARCHAR}
  </update>
</mapper>