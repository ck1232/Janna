<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.ViewProductInventoryLocationMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.ViewProductInventoryLocation">
    <result column="locationId" jdbcType="INTEGER" property="locationid" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="ProductName" jdbcType="VARCHAR" property="productname" />
    <result column="ProductId" jdbcType="INTEGER" property="productid" />
    <result column="suboption1Name" jdbcType="VARCHAR" property="suboption1name" />
    <result column="subOption1Id" jdbcType="INTEGER" property="suboption1id" />
    <result column="suboption2Name" jdbcType="VARCHAR" property="suboption2name" />
    <result column="subOption2Id" jdbcType="INTEGER" property="suboption2id" />
    <result column="suboption3Name" jdbcType="VARCHAR" property="suboption3name" />
    <result column="subOption3Id" jdbcType="INTEGER" property="suboption3id" />
    <result column="qty" jdbcType="DECIMAL" property="qty" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    locationId, location, ProductName, ProductId, suboption1Name, subOption1Id, suboption2Name, 
    subOption2Id, suboption3Name, subOption3Id, qty
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.ViewProductInventoryLocationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_product_inventory_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.JJ.model.ViewProductInventoryLocationExample">
    delete from view_product_inventory_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.ViewProductInventoryLocation">
    insert into view_product_inventory_location (locationId, location, ProductName, 
      ProductId, suboption1Name, subOption1Id, 
      suboption2Name, subOption2Id, suboption3Name, 
      subOption3Id, qty)
    values (#{locationid,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, #{productname,jdbcType=VARCHAR}, 
      #{productid,jdbcType=INTEGER}, #{suboption1name,jdbcType=VARCHAR}, #{suboption1id,jdbcType=INTEGER}, 
      #{suboption2name,jdbcType=VARCHAR}, #{suboption2id,jdbcType=INTEGER}, #{suboption3name,jdbcType=VARCHAR}, 
      #{suboption3id,jdbcType=INTEGER}, #{qty,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.ViewProductInventoryLocation">
    insert into view_product_inventory_location
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="locationid != null">
        locationId,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="productname != null">
        ProductName,
      </if>
      <if test="productid != null">
        ProductId,
      </if>
      <if test="suboption1name != null">
        suboption1Name,
      </if>
      <if test="suboption1id != null">
        subOption1Id,
      </if>
      <if test="suboption2name != null">
        suboption2Name,
      </if>
      <if test="suboption2id != null">
        subOption2Id,
      </if>
      <if test="suboption3name != null">
        suboption3Name,
      </if>
      <if test="suboption3id != null">
        subOption3Id,
      </if>
      <if test="qty != null">
        qty,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="locationid != null">
        #{locationid,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="productname != null">
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="suboption1name != null">
        #{suboption1name,jdbcType=VARCHAR},
      </if>
      <if test="suboption1id != null">
        #{suboption1id,jdbcType=INTEGER},
      </if>
      <if test="suboption2name != null">
        #{suboption2name,jdbcType=VARCHAR},
      </if>
      <if test="suboption2id != null">
        #{suboption2id,jdbcType=INTEGER},
      </if>
      <if test="suboption3name != null">
        #{suboption3name,jdbcType=VARCHAR},
      </if>
      <if test="suboption3id != null">
        #{suboption3id,jdbcType=INTEGER},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.ViewProductInventoryLocationExample" resultType="java.lang.Integer">
    select count(*) from view_product_inventory_location
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update view_product_inventory_location
    <set>
      <if test="record.locationid != null">
        locationId = #{record.locationid,jdbcType=INTEGER},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.productname != null">
        ProductName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.productid != null">
        ProductId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.suboption1name != null">
        suboption1Name = #{record.suboption1name,jdbcType=VARCHAR},
      </if>
      <if test="record.suboption1id != null">
        subOption1Id = #{record.suboption1id,jdbcType=INTEGER},
      </if>
      <if test="record.suboption2name != null">
        suboption2Name = #{record.suboption2name,jdbcType=VARCHAR},
      </if>
      <if test="record.suboption2id != null">
        subOption2Id = #{record.suboption2id,jdbcType=INTEGER},
      </if>
      <if test="record.suboption3name != null">
        suboption3Name = #{record.suboption3name,jdbcType=VARCHAR},
      </if>
      <if test="record.suboption3id != null">
        subOption3Id = #{record.suboption3id,jdbcType=INTEGER},
      </if>
      <if test="record.qty != null">
        qty = #{record.qty,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update view_product_inventory_location
    set locationId = #{record.locationid,jdbcType=INTEGER},
      location = #{record.location,jdbcType=VARCHAR},
      ProductName = #{record.productname,jdbcType=VARCHAR},
      ProductId = #{record.productid,jdbcType=INTEGER},
      suboption1Name = #{record.suboption1name,jdbcType=VARCHAR},
      subOption1Id = #{record.suboption1id,jdbcType=INTEGER},
      suboption2Name = #{record.suboption2name,jdbcType=VARCHAR},
      subOption2Id = #{record.suboption2id,jdbcType=INTEGER},
      suboption3Name = #{record.suboption3name,jdbcType=VARCHAR},
      subOption3Id = #{record.suboption3id,jdbcType=INTEGER},
      qty = #{record.qty,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>