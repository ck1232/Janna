<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.BatchproductRsMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.BatchproductRs">
    <id column="batchproductId" jdbcType="INTEGER" property="batchproductid" />
    <result column="batchid" jdbcType="INTEGER" property="batchid" />
    <result column="productsuboptionId" jdbcType="INTEGER" property="productsuboptionid" />
    <result column="unitcost" jdbcType="DECIMAL" property="unitcost" />
    <result column="qty" jdbcType="INTEGER" property="qty" />
    <result column="deleteind" jdbcType="CHAR" property="deleteind" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
    <result column="createdby" jdbcType="VARCHAR" property="createdby" />
    <result column="updatedon" jdbcType="TIMESTAMP" property="updatedon" />
    <result column="updatedby" jdbcType="VARCHAR" property="updatedby" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    batchproductId, batchid, productsuboptionId, unitcost, qty, deleteind, createdon, 
    createdby, updatedon, updatedby
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.BatchproductRsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from batchproduct_rs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from batchproduct_rs
    where batchproductId = #{batchproductid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from batchproduct_rs
    where batchproductId = #{batchproductid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.BatchproductRsExample">
    delete from batchproduct_rs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.BatchproductRs">
    insert into batchproduct_rs (batchproductId, batchid, productsuboptionId, 
      unitcost, qty, deleteind, 
      createdon, createdby, updatedon, 
      updatedby)
    values (#{batchproductid,jdbcType=INTEGER}, #{batchid,jdbcType=INTEGER}, #{productsuboptionid,jdbcType=INTEGER}, 
      #{unitcost,jdbcType=DECIMAL}, #{qty,jdbcType=INTEGER}, #{deleteind,jdbcType=CHAR}, 
      #{createdon,jdbcType=TIMESTAMP}, #{createdby,jdbcType=VARCHAR}, #{updatedon,jdbcType=TIMESTAMP}, 
      #{updatedby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.BatchproductRs">
    insert into batchproduct_rs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchproductid != null">
        batchproductId,
      </if>
      <if test="batchid != null">
        batchid,
      </if>
      <if test="productsuboptionid != null">
        productsuboptionId,
      </if>
      <if test="unitcost != null">
        unitcost,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="deleteind != null">
        deleteind,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
      <if test="createdby != null">
        createdby,
      </if>
      <if test="updatedon != null">
        updatedon,
      </if>
      <if test="updatedby != null">
        updatedby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchproductid != null">
        #{batchproductid,jdbcType=INTEGER},
      </if>
      <if test="batchid != null">
        #{batchid,jdbcType=INTEGER},
      </if>
      <if test="productsuboptionid != null">
        #{productsuboptionid,jdbcType=INTEGER},
      </if>
      <if test="unitcost != null">
        #{unitcost,jdbcType=DECIMAL},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=INTEGER},
      </if>
      <if test="deleteind != null">
        #{deleteind,jdbcType=CHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null">
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        #{updatedby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.BatchproductRsExample" resultType="java.lang.Integer">
    select count(*) from batchproduct_rs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update batchproduct_rs
    <set>
      <if test="record.batchproductid != null">
        batchproductId = #{record.batchproductid,jdbcType=INTEGER},
      </if>
      <if test="record.batchid != null">
        batchid = #{record.batchid,jdbcType=INTEGER},
      </if>
      <if test="record.productsuboptionid != null">
        productsuboptionId = #{record.productsuboptionid,jdbcType=INTEGER},
      </if>
      <if test="record.unitcost != null">
        unitcost = #{record.unitcost,jdbcType=DECIMAL},
      </if>
      <if test="record.qty != null">
        qty = #{record.qty,jdbcType=INTEGER},
      </if>
      <if test="record.deleteind != null">
        deleteind = #{record.deleteind,jdbcType=CHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdby != null">
        createdby = #{record.createdby,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedon != null">
        updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedby != null">
        updatedby = #{record.updatedby,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update batchproduct_rs
    set batchproductId = #{record.batchproductid,jdbcType=INTEGER},
      batchid = #{record.batchid,jdbcType=INTEGER},
      productsuboptionId = #{record.productsuboptionid,jdbcType=INTEGER},
      unitcost = #{record.unitcost,jdbcType=DECIMAL},
      qty = #{record.qty,jdbcType=INTEGER},
      deleteind = #{record.deleteind,jdbcType=CHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP},
      createdby = #{record.createdby,jdbcType=VARCHAR},
      updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      updatedby = #{record.updatedby,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.BatchproductRs">
    update batchproduct_rs
    <set>
      <if test="batchid != null">
        batchid = #{batchid,jdbcType=INTEGER},
      </if>
      <if test="productsuboptionid != null">
        productsuboptionId = #{productsuboptionid,jdbcType=INTEGER},
      </if>
      <if test="unitcost != null">
        unitcost = #{unitcost,jdbcType=DECIMAL},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=INTEGER},
      </if>
      <if test="deleteind != null">
        deleteind = #{deleteind,jdbcType=CHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null">
        createdby = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        updatedon = #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        updatedby = #{updatedby,jdbcType=VARCHAR},
      </if>
    </set>
    where batchproductId = #{batchproductid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.BatchproductRs">
    update batchproduct_rs
    set batchid = #{batchid,jdbcType=INTEGER},
      productsuboptionId = #{productsuboptionid,jdbcType=INTEGER},
      unitcost = #{unitcost,jdbcType=DECIMAL},
      qty = #{qty,jdbcType=INTEGER},
      deleteind = #{deleteind,jdbcType=CHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP},
      createdby = #{createdby,jdbcType=VARCHAR},
      updatedon = #{updatedon,jdbcType=TIMESTAMP},
      updatedby = #{updatedby,jdbcType=VARCHAR}
    where batchproductId = #{batchproductid,jdbcType=INTEGER}
  </update>
</mapper>