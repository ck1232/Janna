<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.JJ.dao.ProductsuboptionRsMapper">
  <resultMap id="BaseResultMap" type="com.JJ.model.ProductsuboptionRs">
    <id column="productsuboptionId" jdbcType="INTEGER" property="productsuboptionid" />
    <result column="productId" jdbcType="INTEGER" property="productid" />
    <result column="suboption1Id" jdbcType="INTEGER" property="suboption1id" />
    <result column="suboption2Id" jdbcType="INTEGER" property="suboption2id" />
    <result column="suboption3Id" jdbcType="INTEGER" property="suboption3id" />
    <result column="deleteInd" jdbcType="CHAR" property="deleteind" />
    <result column="createdby" jdbcType="VARCHAR" property="createdby" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
    <result column="updatedby" jdbcType="VARCHAR" property="updatedby" />
    <result column="updatedon" jdbcType="TIMESTAMP" property="updatedon" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    productsuboptionId, productId, suboption1Id, suboption2Id, suboption3Id, deleteInd, 
    createdby, createdon, updatedby, updatedon, version
  </sql>
  <select id="selectByExample" parameterType="com.JJ.model.ProductsuboptionRsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productsuboption_rs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from productsuboption_rs
    where productsuboptionId = #{productsuboptionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from productsuboption_rs
    where productsuboptionId = #{productsuboptionid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.JJ.model.ProductsuboptionRsExample">
    delete from productsuboption_rs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.JJ.model.ProductsuboptionRs">
    insert into productsuboption_rs (productsuboptionId, productId, suboption1Id, 
      suboption2Id, suboption3Id, deleteInd, 
      createdby, createdon, updatedby, 
      updatedon, version)
    values (#{productsuboptionid,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, #{suboption1id,jdbcType=INTEGER}, 
      #{suboption2id,jdbcType=INTEGER}, #{suboption3id,jdbcType=INTEGER}, #{deleteind,jdbcType=CHAR}, 
      #{createdby,jdbcType=VARCHAR}, #{createdon,jdbcType=TIMESTAMP}, #{updatedby,jdbcType=VARCHAR}, 
      #{updatedon,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.JJ.model.ProductsuboptionRs">
    insert into productsuboption_rs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productsuboptionid != null">
        productsuboptionId,
      </if>
      <if test="productid != null">
        productId,
      </if>
      <if test="suboption1id != null">
        suboption1Id,
      </if>
      <if test="suboption2id != null">
        suboption2Id,
      </if>
      <if test="suboption3id != null">
        suboption3Id,
      </if>
      <if test="deleteind != null">
        deleteInd,
      </if>
      <if test="createdby != null">
        createdby,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
      <if test="updatedby != null">
        updatedby,
      </if>
      <if test="updatedon != null">
        updatedon,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productsuboptionid != null">
        #{productsuboptionid,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="suboption1id != null">
        #{suboption1id,jdbcType=INTEGER},
      </if>
      <if test="suboption2id != null">
        #{suboption2id,jdbcType=INTEGER},
      </if>
      <if test="suboption3id != null">
        #{suboption3id,jdbcType=INTEGER},
      </if>
      <if test="deleteind != null">
        #{deleteind,jdbcType=CHAR},
      </if>
      <if test="createdby != null">
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        #{updatedby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.JJ.model.ProductsuboptionRsExample" resultType="java.lang.Integer">
    select count(*) from productsuboption_rs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update productsuboption_rs
    <set>
      <if test="record.productsuboptionid != null">
        productsuboptionId = #{record.productsuboptionid,jdbcType=INTEGER},
      </if>
      <if test="record.productid != null">
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.suboption1id != null">
        suboption1Id = #{record.suboption1id,jdbcType=INTEGER},
      </if>
      <if test="record.suboption2id != null">
        suboption2Id = #{record.suboption2id,jdbcType=INTEGER},
      </if>
      <if test="record.suboption3id != null">
        suboption3Id = #{record.suboption3id,jdbcType=INTEGER},
      </if>
      <if test="record.deleteind != null">
        deleteInd = #{record.deleteind,jdbcType=CHAR},
      </if>
      <if test="record.createdby != null">
        createdby = #{record.createdby,jdbcType=VARCHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedby != null">
        updatedby = #{record.updatedby,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedon != null">
        updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update productsuboption_rs
    set productsuboptionId = #{record.productsuboptionid,jdbcType=INTEGER},
      productId = #{record.productid,jdbcType=INTEGER},
      suboption1Id = #{record.suboption1id,jdbcType=INTEGER},
      suboption2Id = #{record.suboption2id,jdbcType=INTEGER},
      suboption3Id = #{record.suboption3id,jdbcType=INTEGER},
      deleteInd = #{record.deleteind,jdbcType=CHAR},
      createdby = #{record.createdby,jdbcType=VARCHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP},
      updatedby = #{record.updatedby,jdbcType=VARCHAR},
      updatedon = #{record.updatedon,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.JJ.model.ProductsuboptionRs">
    update productsuboption_rs
    <set>
      <if test="productid != null">
        productId = #{productid,jdbcType=INTEGER},
      </if>
      <if test="suboption1id != null">
        suboption1Id = #{suboption1id,jdbcType=INTEGER},
      </if>
      <if test="suboption2id != null">
        suboption2Id = #{suboption2id,jdbcType=INTEGER},
      </if>
      <if test="suboption3id != null">
        suboption3Id = #{suboption3id,jdbcType=INTEGER},
      </if>
      <if test="deleteind != null">
        deleteInd = #{deleteind,jdbcType=CHAR},
      </if>
      <if test="createdby != null">
        createdby = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null">
        updatedby = #{updatedby,jdbcType=VARCHAR},
      </if>
      <if test="updatedon != null">
        updatedon = #{updatedon,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where productsuboptionId = #{productsuboptionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.JJ.model.ProductsuboptionRs">
    update productsuboption_rs
    set productId = #{productid,jdbcType=INTEGER},
      suboption1Id = #{suboption1id,jdbcType=INTEGER},
      suboption2Id = #{suboption2id,jdbcType=INTEGER},
      suboption3Id = #{suboption3id,jdbcType=INTEGER},
      deleteInd = #{deleteind,jdbcType=CHAR},
      createdby = #{createdby,jdbcType=VARCHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP},
      updatedby = #{updatedby,jdbcType=VARCHAR},
      updatedon = #{updatedon,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where productsuboptionId = #{productsuboptionid,jdbcType=INTEGER}
  </update>
</mapper>